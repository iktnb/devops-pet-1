version: '3.8'

services:
  backend_rds:
    restart: always
    image: 024848481979.dkr.ecr.us-east-1.amazonaws.com/backend_rds:latest
    container_name: backend_rds
    environment:
      CORS_ALLOWED_ORIGINS: 'http://localhost:8000,http://localhost:8001,http://dcd5kcbtvpy46.cloudfront.net/'
      DB_NAME: mydatabase
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: 123456
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  backend_redis:
    restart: always
    image: 024848481979.dkr.ecr.us-east-1.amazonaws.com/backend_redis:latest
    container_name: backend_redis
    environment:
      CORS_ALLOWED_ORIGINS: 'http://localhost:8000,http://localhost:8001,http://dcd5kcbtvpy46.cloudfront.net/'
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: 123456
    ports:
      - "8001:8001"
    depends_on:
      - redis

  postgres:
    restart: always
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    restart: always
    image: redis:latest
    container_name: redis_cache
    command: /bin/sh -c "redis-server --requirepass 123456"
    environment:
      - name=redis_password
    volumes:
       - ./config/redis:/usr/local/etc/redis
    ports:
      - "6379:6379"

volumes:
  postgres_data:
