name: Build, Push to ECR, and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: $${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image tag
        id: vars
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Tag and Push images to ECR
        run: |
          SERVICES=$(docker-compose config --services)
          for SERVICE in $SERVICES; do
            docker build -t ${SERVICE}:latest .
            docker tag ${SERVICE}:latest $${{ env.ECR_REGISTRY }}/${SERVICE}:${{ env.IMAGE_TAG }}
            docker push $${{ env.ECR_REGISTRY }}/${SERVICE}:${{ env.IMAGE_TAG }}
          done

      - name: Deploy on EC2
        env:
          IMAGE_TAG: $${{ env.IMAGE_TAG }}
        run: |
          ssh -o StrictHostKeyChecking=no -i "${{ secrets.EC2_SSH_KEY }}" ubuntu@${{ secrets.EC2_PUBLIC_IP }} << EOF
            if ! command -v docker-compose &> /dev/null
            then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            cd /path/to/your/docker-compose/directory
            docker-compose pull
            docker-compose up -d
          EOF
